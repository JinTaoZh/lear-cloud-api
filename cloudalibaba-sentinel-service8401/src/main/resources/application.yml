server:
  port: 8401

spring:
  application:
    name: cloud-sentinel-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #Nacos服务注册中心地址
    sentinel:
      transport:
        dashboard: localhost:10010 #配置Sentinel dashboard地址
        port: 8719 #本地启动 HTTP API Server 的端口号 若端口冲突会自动向下探测可用的端口
                   # 指定应用与sentinel控制台交互的端口，本地应用会起一个占用该端口的 Http Server
                   # 这里的 spring.cloud.sentinel.transport.port 端口配置会在应用对应的机器上启动一个 Http Server，
                   # 该 Server 会与 Sentinel 控制台做交互。比如 Sentinel 控制台添加了一个限流规则，
                   # 会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中
      datasource:
        ds1:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow # 规则类型

management:
  endpoints:
    web:
      exposure:
        include: '*'